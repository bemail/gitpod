/**
 * Copyright (c) 2022 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License-AGPL.txt in the project root for license information.
 */

// @generated by protoc-gen-es v0.1.1
// @generated from file gitpod/v1/prebuilds.proto (package gitpod.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {WorkspaceContext} from "./workspaces_pb.js";

/**
 * @generated from message gitpod.v1.GetPrebuildRequest
 */
export const GetPrebuildRequest = proto3.makeMessageType(
  "gitpod.v1.GetPrebuildRequest",
  () => [
    { no: 1, name: "prebuild_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message gitpod.v1.GetPrebuildResponse
 */
export const GetPrebuildResponse = proto3.makeMessageType(
  "gitpod.v1.GetPrebuildResponse",
  () => [
    { no: 1, name: "prebuild", kind: "message", T: Prebuild },
  ],
);

/**
 * @generated from message gitpod.v1.GetRunningPrebuildRequest
 */
export const GetRunningPrebuildRequest = proto3.makeMessageType(
  "gitpod.v1.GetRunningPrebuildRequest",
  () => [
    { no: 1, name: "context_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message gitpod.v1.GetRunningPrebuildResponse
 */
export const GetRunningPrebuildResponse = proto3.makeMessageType(
  "gitpod.v1.GetRunningPrebuildResponse",
  () => [
    { no: 1, name: "prebuild", kind: "message", T: Prebuild },
  ],
);

/**
 * @generated from message gitpod.v1.ListenToPrebuildStatusRequest
 */
export const ListenToPrebuildStatusRequest = proto3.makeMessageType(
  "gitpod.v1.ListenToPrebuildStatusRequest",
  () => [
    { no: 1, name: "prebuild_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message gitpod.v1.ListenToPrebuildStatusResponse
 */
export const ListenToPrebuildStatusResponse = proto3.makeMessageType(
  "gitpod.v1.ListenToPrebuildStatusResponse",
  () => [
    { no: 1, name: "status", kind: "message", T: PrebuildStatus },
  ],
);

/**
 * @generated from message gitpod.v1.ListenToPrebuildLogsRequest
 */
export const ListenToPrebuildLogsRequest = proto3.makeMessageType(
  "gitpod.v1.ListenToPrebuildLogsRequest",
  () => [
    { no: 1, name: "prebuild_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message gitpod.v1.ListenToPrebuildLogsResponse
 */
export const ListenToPrebuildLogsResponse = proto3.makeMessageType(
  "gitpod.v1.ListenToPrebuildLogsResponse",
  () => [
    { no: 1, name: "line", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Prebuild describes a prebuild
 *
 * @generated from message gitpod.v1.Prebuild
 */
export const Prebuild = proto3.makeMessageType(
  "gitpod.v1.Prebuild",
  () => [
    { no: 1, name: "prebuild_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "spec", kind: "message", T: PrebuildSpec },
    { no: 3, name: "status", kind: "message", T: PrebuildStatus },
  ],
);

/**
 * PrebuildSpec specifies the prebuild input.
 *
 * @generated from message gitpod.v1.PrebuildSpec
 */
export const PrebuildSpec = proto3.makeMessageType(
  "gitpod.v1.PrebuildSpec",
  () => [
    { no: 1, name: "context", kind: "message", T: WorkspaceContext },
    { no: 2, name: "incremental", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * PrebuildStatus describes the prebuild status.
 *
 * @generated from message gitpod.v1.PrebuildStatus
 */
export const PrebuildStatus = proto3.makeMessageType(
  "gitpod.v1.PrebuildStatus",
  () => [
    { no: 1, name: "phase", kind: "enum", T: proto3.getEnumType(PrebuildStatus_Phase) },
    { no: 2, name: "result", kind: "enum", T: proto3.getEnumType(PrebuildStatus_Result) },
    { no: 3, name: "result_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from enum gitpod.v1.PrebuildStatus.Phase
 */
export const PrebuildStatus_Phase = proto3.makeEnum(
  "gitpod.v1.PrebuildStatus.Phase",
  [
    {no: 0, name: "PHASE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "PHASE_PENDING", localName: "PENDING"},
    {no: 2, name: "PHASE_RUNNING", localName: "RUNNING"},
    {no: 3, name: "PHASE_DONE", localName: "DONE"},
  ],
);

/**
 * @generated from enum gitpod.v1.PrebuildStatus.Result
 */
export const PrebuildStatus_Result = proto3.makeEnum(
  "gitpod.v1.PrebuildStatus.Result",
  [
    {no: 0, name: "RESULT_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "RESULT_SUCCESS", localName: "SUCCESS"},
    {no: 2, name: "RESULT_USER_CANCELED", localName: "USER_CANCELED"},
    {no: 3, name: "RESULT_SYSTEM_FAILURE", localName: "SYSTEM_FAILURE"},
    {no: 4, name: "RESULT_TASK_FAILURE", localName: "TASK_FAILURE"},
  ],
);
